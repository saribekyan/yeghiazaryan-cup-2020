#!/usr/bin/env python

r = 60
c = 60
masters = []
board = [['#' for x in range(c)] for y in range(r)]

for i in range(1,r-1,4):
  # Punch holes in walls
  if i >= 2:
    if (i % 8 == 1):
      board[i-2][2] = '.'
    else:
      board[i-2][(c-1)-((c-1)%4)-2] = '.'

  # Organise a winding path through
  for j in range(c):
    board[i][j] = '.'
    if j % 2 == 0:
      board[i-1][j] = '.'
      board[i+1][j] = '.'
    else:
      board[i-2+(j%4)][j] = '.'

  # Now build up a murder of masters
  master = [(i+1, c-1)] + [(i,c-1)] * 6
  masters += [master[:l] for l in range(2,7+1)]

# Write sizes and starting/ending rows and columns
print r,c
print('(' + ' '.join(map(str, (  1,  1))) + ')' + ' ' +
      '(' + ' '.join(map(str, (r-3,c-1))) + ')')

# Write board grid
for i in board:
    print ''.join(i)

# Write a list of master locations
print len(masters)
for i in masters:
    print len(i), ' '.join(map(lambda x: '(' + str(x[0]+1) + ' ' + str(x[1]+1) + ')', i))
